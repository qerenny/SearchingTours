// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SearchingTours.Infrastructure.Persistence.Contexts;

#nullable disable

namespace SearchingTours.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240428151328_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SearchingTours.Application.Models.ReviewModel", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AuthorName")
                        .HasColumnType("text");

                    b.Property<int?>("Rating")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<Guid?>("TravelPackageId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TravelPackageId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("SearchingTours.Application.Models.TravelAgencyModel", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContactInfo")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TravelAgencies");
                });

            modelBuilder.Entity("SearchingTours.Application.Models.TravelPackageModel", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("AmountOfPackage")
                        .HasColumnType("integer");

                    b.Property<int?>("AmountOfPeople")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<double?>("Rating")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("TravelAgencyId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TravelAgencyId");

                    b.ToTable("TravelPackages");
                });

            modelBuilder.Entity("SearchingTours.Application.Models.UserModel", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SearchingTours.Application.Models.ReviewModel", b =>
                {
                    b.HasOne("SearchingTours.Application.Models.TravelPackageModel", "TravelPackage")
                        .WithMany()
                        .HasForeignKey("TravelPackageId");

                    b.Navigation("TravelPackage");
                });

            modelBuilder.Entity("SearchingTours.Application.Models.TravelPackageModel", b =>
                {
                    b.HasOne("SearchingTours.Application.Models.TravelAgencyModel", "TravelAgency")
                        .WithMany()
                        .HasForeignKey("TravelAgencyId");

                    b.Navigation("TravelAgency");
                });
#pragma warning restore 612, 618
        }
    }
}
